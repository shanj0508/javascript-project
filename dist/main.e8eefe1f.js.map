{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","console","log","String","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.e8eefe1f.js","sourceRoot":"..\\nav\\src","sourcesContent":["const $siteList = $(\".siteList\");\r\nconst $lastLi = $siteList.find(\"li.last\");\r\nconst x = localStorage.getItem(\"x\");\r\nconst xObject = JSON.parse(x); //把字符串重新变成对象\r\nconst hashMap = xObject || [\r\n  //   xObject||[]  表示:如果 xObject存在，就使用 xObject的值，如果不存在，就用[]里面的默认值作为初始值\r\n  {\r\n    logo: \"A\",\r\n    url: \"https://www.acfun.cn\",\r\n  },\r\n  {\r\n    logo: \"B\",\r\n    url: \"https://www.bilibili.com\",\r\n  },\r\n];\r\nconst simplifyUrl = (url) => {\r\n  return url\r\n    .replace(\"https://\", \"\")\r\n    .replace(\"http://\", \"\")\r\n    .replace(\"www.\", \"\")\r\n    .replace(/\\/.*/, \"\"); //  replace(/\\/.*/, \"\")   删除/开头的内容\r\n};\r\nconst render = () => {\r\n  $siteList.find(\"li:not(.last)\").remove(); //找到除了最后一个.last以外的所有的li,清空这些li\r\n  hashMap.forEach((node, index) => {\r\n    const $li = $(`<li>\r\n    <div class=\"site\">\r\n      <div class=\"logo\">\r\n      ${node.logo}\r\n      </div>\r\n      <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n      <div class=\"close\">\r\n      <svg class=\"icon\">\r\n        <use xlink:href=\"#icon-close\"></use>\r\n      </svg>\r\n      </div>\r\n    </div>\r\n</li> `).insertBefore($lastLi);\r\n    $li.on(\"click\", () => {\r\n      window.open(node.url); //通过 window.open实现a标签的点击跳转功能\r\n    });\r\n    // 删除功能\r\n    $li.on(\"click\", \".close\", (e) => {\r\n      e.stopPropagation(); /*阻止冒泡行为，点击x按钮，不会跳转超链接 ，阻止冒泡对a标签无效*/\r\n      hashMap.splice(index, 1);\r\n      render();\r\n    });\r\n  });\r\n};\r\nrender();\r\n$(\".addButton\").on(\"click\", () => {\r\n  let url = window.prompt(\"请问你要添加的网址是啥？\");\r\n  if (url.indexOf(\"http\") !== 0) {\r\n    url = \"https://\" + url;\r\n  }\r\n  hashMap.push({\r\n    logo: simplifyUrl(url)[0].toUpperCase(), //.toUpperCase()将小写转为大写\r\n    url: url,\r\n  });\r\n  //重新渲染页面\r\n  render();\r\n});\r\n//关闭页面时，会将hashMap存入localStorage\r\nwindow.onbeforeunload = () => {\r\n  console.log(\"页面要关闭了\");\r\n  const String = JSON.stringify(hashMap); //JSON.stringify可以把一个对象变为字符串\r\n  localStorage.setItem(\"x\", String);\r\n};\r\n\r\n//添加键盘事件\r\n$(document).on(\"keypress\", (e) => {\r\n  //   const key = e.key;   可以简写为下面形式：\r\n  console.log(e.key);\r\n  const { key } = e;\r\n  for (let i = 0; i < hashMap.length; i++) {\r\n    // console.log(hashMap[i].logo.toLowerCase);\r\n    if (hashMap[i].logo.toLowerCase() === key) {\r\n      //toLowerCase 转为小写\r\n      window.open(hashMap[i].url);\r\n    }\r\n  }\r\n});\r\n"]}